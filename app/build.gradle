apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.moetutu.acg12"
        minSdkVersion 16
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 52
        versionName '1.1.4.0'
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a','x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }


        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d51d951f4d617578e6387215", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    /*针对greenDao的一些配置*/
    greendao {
        schemaVersion 1 //数据库版本号
        daoPackage 'com.dao.userinfo' //自动生成的工具类的包名
        targetGenDir 'src/main/java-gen' //路径
    }

    repositories {
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen', 'libs']
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    //批量配置
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }


    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "ACG12-${defaultConfig.versionName}.apk"
        }
    }

    //签名
    signingConfigs {
        debug {
            try {
                def signP = getSigningProperties(true)
                storeFile file(signP[0])
            } catch (ex) {
                ex.printStackTrace()
            }
        }
        release {
            try {
                def signP = getSigningProperties(false)
                storeFile file(signP[0])
                storePassword signP[1]
                keyAlias signP[2]
                keyPassword signP[3]
            } catch (ex) {
                ex.printStackTrace()
            }

        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            versionNameSuffix "_debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            shrinkResources false// 移除无用的resource文件
            zipAlignEnabled false       //Zipalign优化
            minifyEnabled false    //混淆
            signingConfig signingConfigs.release
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }


    allprojects {
        repositories {
            mavenCentral()
        }
    }

    lintOptions {
        abortOnError false
    }

    //分包 非常重要
    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:26.+'
    compile 'com.android.support:design:26.+'
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support:recyclerview-v7:26.+'
    compile 'com.android.support:cardview-v7:26.+'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'io.reactivex:rxandroid:1.1.0'

    compile 'com.yqritc:recyclerview-flexibledivider:1.2.9'
    compile 'com.google.android.exoplayer:exoplayer:r1.4.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'com.github.chrisbanes:PhotoView:1.3.0'


    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.liulishuo.filedownloader:library:1.3.0'

    compile 'com.github.florent37:arclayout:1.0.2'//可显示曲线图片
    compile project(':richtext')
    compile project(':emojilibrary')

    compile 'cn.jiguang.sdk:jpush:3.0.9'  // 此处以JPush 3.0.0 版本为例例。
    compile 'cn.jiguang.sdk:jcore:1.1.7'  // 此处以JCore 1.0.0 版本为例。
    compile files('libs/umeng-analytics-v6.1.0.jar')


    compile 'com.github.ctiao:DanmakuFlameMaster:0.6.2'
    compile 'com.github.ctiao:ndkbitmap-armv7a:0.6.2'

    compile 'com.jaeger.statusbaruitl:library:1.3.6'//沉浸效果

    compile 'com.github.rubensousa:floatingtoolbar:1.4.4'

    compile 'com.yalantis:ucrop:2.2.0'

    //稳定版
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.3'//没有使用特殊Header，可以不加这行


    annotationProcessor 'com.bluelinelabs:logansquare-compiler:1.3.7'//LoganSquare解析
    compile 'com.bluelinelabs:logansquare:1.3.7'
    compile "com.github.aurae.retrofit2:converter-logansquare:1.4.1"

    compile files('libs/umeng_social_api.jar')
    compile files('libs/umeng_social_net.jar')
    compile files('libs/umeng_social_tool.jar')
    compile files('libs/SocialSDK_QQ_Simplify.jar')

}
// -----------------------------------------------------------@Assist
String[] getSigningProperties(boolean isDebug) {
    File propFile = new File('sign.properties')
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (isDebug) {
            def signP = new String[1];
            signP[0] = props['DEBUG_STORE_FILE']
            return signP
        } else {
            def signP = new String[4];
            signP[0] = props['STORE_FILE']
            signP[1] = props['STORE_PASSWORD']
            signP[2] = props['KEY_ALIAS']
            signP[3] = props['KEY_PASSWORD']
            return signP
        }
    }
}
